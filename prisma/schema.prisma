// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // uses connection pooling
}

 
model User {
  id              String             @id @default(cuid())
  clerkId         String             @unique
  email           String             @unique
  name            String?
  linkedInAccount LinkedInAccount?
  applicationCounts ApplicationCount[]
}

model LinkedInAccount {
  id         String   @id @default(cuid())
  userId     String   @unique
  user       User     @relation(fields: [userId], references: [id])
  tokens     Json
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([userId])
}


model S3File {
  id           String   @id @default(cuid())
  username     String
  dateCreated  DateTime @default(now())
  s3Identifier String   
  jobLink      String   @default("")
}

model ApplicationCount {
  id          String   @id @default(cuid())
  username    String
  weekOfYear  Int
  year        Int
  count       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([username, weekOfYear, year])
  user        User     @relation(fields: [username], references: [email])
}

model HealthChecks{
  id          String   @id @default(cuid())
  username    String

  isAlive     Boolean
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}